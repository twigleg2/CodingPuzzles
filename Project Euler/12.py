# The sequence of triangle numbers is generated by adding the natural numbers.
# So, the 7th triangle number would be 1+2+3+4+5+6+7 = 28
# The first 10 terms in the sequence of triangle numbers would be:
# 1,3,6,10,15,21,28,36,45,55
# 28 is the first triangle number to have more than 5 divisors (1,2,4,7,14,28)
# What is the value of the first triangle number to have over 500 divisors?
import math

# NUM_DIVISORS = 5
NUM_DIVISORS = 500

def findDivisors(num):
    divisors = {1}
    for n in range(1, math.floor(math.sqrt(num)) + 1):
        if num % n == 0:
            divisors.add(n)
            divisors.add(num//n)
    return divisors

currentTriangleNumber = 1
nextNaturalNumber = 2
while True:
    divisors = findDivisors(currentTriangleNumber)
    if len(divisors) > NUM_DIVISORS:
        break
    currentTriangleNumber += nextNaturalNumber
    nextNaturalNumber += 1

print("The answer is: ", currentTriangleNumber)